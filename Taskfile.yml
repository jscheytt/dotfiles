# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: "3"

includes:
  git-hooks: ./scripts/git-hooks.taskfile.yml
  lint: ./scripts/lint.taskfile.yml
  setup: ./scripts/setup.taskfile.yml

vars:
  BECOME_PASSWORD_FILE: become-password.secret
  EXTRA_ANSIBLE_ARGS: -vv
  VAULT_PASSWORD_FILE: vault-password.txt

tasks:
  help:
    desc: List all tasks
    aliases:
      - default
    cmds:
      - task --list-all

  clean:
    desc: Remove artifacts.
    deps:
      - git-hooks:clean
      - clean:python
    cmds:
      - rm -v "{{.VAULT_PASSWORD_FILE}}" "{{.BECOME_PASSWORD_FILE}}" || true

  clean:python:
    desc: Remove Python stuff.
    cmds:
      - uv cache clean
      - uv sync --reinstall

  install:
    desc: Install dependencies.
    deps:
      - git-hooks:build
    cmds:
      # Install Xcode for Homebrew.
      - xcode-select --install || true
      # Install Homebrew.
      - >-
        command -v brew > /dev/null || { /bin/bash -c "$(curl -fsSL
        https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"; }
      # Install uv.
      - command -v uv > /dev/null || { brew install uv; }
      # Install target Python version.
      - uv python install
      # Install Python dependencies from Pipfile.
      - uv sync
      # Install Ansible collections and modules.
      - uv run ansible-galaxy install --role-file requirements.yml

  run:
    desc: Run Ansible playbook.
    deps:
      - setup:become-password
      - setup:vault-password
      - install
    vars:
      PLAYBOOK: main.yml
    cmds:
      - >-
        uv run ansible-playbook {{.PLAYBOOK}}
        --extra-vars="ansible_python_interpreter=$(which python)"
        --inventory inventory
        --vault-password-file {{.VAULT_PASSWORD_FILE}}
        {{.EXTRA_ANSIBLE_ARGS}}
